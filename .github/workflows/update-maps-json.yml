name: Upload large SC2 maps

on:
  push:
    branches: [main]           # or your default branch

permissions:
  contents: write              # needed to create / update a release

jobs:
  upload-big-maps:
    runs-on: ubuntu-latest

    steps:
    # --------------------------------------------------------------
    # 1.  Check out the repository (no Git-LFS)
    # --------------------------------------------------------------
    - uses: actions/checkout@v4
      with:
        lfs: false

    # --------------------------------------------------------------
    # 2.  Regenerate maps.json (adds / bumps entries)
    # --------------------------------------------------------------
    - name: Regenerate maps.json
      run: python .github/scripts/update_maps_json.py

    # --------------------------------------------------------------
    # 3.  Collect all filenames that have  "release_asset": true
    #     and expose them via step-output  files=<space-separated list>
    # --------------------------------------------------------------
    - id: list
      run: |
        python - <<'PY'
        import os, json, shlex, pathlib, sys
        data = json.load(open("maps.json"))
        files = [
            m["name"]
            for c in data
            for m in c["maps"]
            if m.get("release_asset")
        ]
        out = "files=" + " ".join(map(shlex.quote, files)) + "\n"
        pathlib.Path(os.environ["GITHUB_OUTPUT"]).write_text(out)
        PY

    # --------------------------------------------------------------
    # 4.  Create (or update) the Release that will hold the assets
    # --------------------------------------------------------------
    - uses: softprops/action-gh-release@v1
      if: steps.list.outputs.files != ''
      with:
        tag_name: maps-assets
        name: Maps Assets
        body: Auto-uploaded large .SC2Map files
        draft: false
        prerelease: false

    # --------------------------------------------------------------
    # 5.  Upload each asset *if it still exists in the repo*;
    #     otherwise skip — it’s already on the Release
    # --------------------------------------------------------------
    - name: Upload assets
      if: steps.list.outputs.files != ''
      env:
        FILES: ${{ steps.list.outputs.files }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for f in ${FILES}; do
          path=$(git ls-files -co --full-name -- "campaigns/**/$f" | head -n1)
          if [ -n "$path" ]; then
            echo "➜ uploading $path"
            gh release upload maps-assets "$path" --clobber
          else
            echo "➜ skipping $f – already on release (no repo copy)"
          fi
        done

    # --------------------------------------------------------------
    # 6.  Commit the updated maps.json (it now contains release URLs)
    # --------------------------------------------------------------
    - name: Commit manifest
      run: |
        git config user.name  github-actions
        git config user.email noreply@github.com
        git add maps.json
        git commit -m "ci: update maps.json with release URLs" || echo "no change"
        git push
